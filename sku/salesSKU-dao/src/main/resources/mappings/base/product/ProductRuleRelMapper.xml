<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pzj.base.product.IProductRuleRelMapper">
	<resultMap id="BaseResultMap" type="com.pzj.base.entity.product.ProductRuleRel">
		<id column="ID" property="id" jdbcType="BIGINT" />
		<result column="S_ID" property="s_id" jdbcType="BIGINT" />
		<result column="P_ID" property="p_id" jdbcType="BIGINT" />
		<result column="R_ID" property="r_id" jdbcType="BIGINT" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, S_ID, P_ID, R_ID
	</sql>
	<!-- 根据主键删除 -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		PRODUCT_RULE_REL
		where ID = #{id,jdbcType=BIGINT}
	</delete>
	<!-- 根据主键查询 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from PRODUCT_RULE_REL
		where ID = #{id,jdbcType=BIGINT}
	</select>
	<!-- 插入实体 -->
	<insert id="insertSelective" parameterType="com.pzj.base.entity.product.ProductRuleRel">
		insert into PRODUCT_RULE_REL
				(ID,
				S_ID,
				P_ID,
				R_ID)
				values(
				#{id,jdbcType=BIGINT},
				#{s_id,jdbcType=BIGINT},
				#{p_id,jdbcType=BIGINT},
				#{r_id,jdbcType=BIGINT}
				)
	</insert>
	<!-- 根据主键更新 -->
	<update id="updateByPrimaryKey" parameterType="com.pzj.base.entity.product.ProductRuleRel">
		update PRODUCT_RULE_REL
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.sId != null">
				S_ID = #{record.s_id,jdbcType=BIGINT},
			</if>
			<if test="record.pId != null">
				P_ID = #{record.p_id,jdbcType=BIGINT},
			</if>
			<if test="record.rId != null">
				R_ID = #{record.r_id,jdbcType=BIGINT},
			</if>
		</set>
		where id = #{record.id,jdbcType=BIGINT}
	</update>
	<!-- 根据ID更新全部 -->
	<update id="updateAllByPrimaryKey" parameterType="com.pzj.base.entity.product.ProductRuleRel">
		update
		PRODUCT_RULE_REL SET
		S_ID = #{s_id,jdbcType=BIGINT},
		P_ID =
		#{p_id,jdbcType=BIGINT},
		R_ID = #{r_id,jdbcType=BIGINT}
		where ID =
		#{id,jdbcType=BIGINT}
	</update>
	<!-- 查询所有 -->
	<select id="selectAllObj" parameterType="com.pzj.base.entity.product.ProductRuleRel"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from PRODUCT_RULE_REL
	</select>
	<!-- 通用总纪录数 -->
	<select id="countByParamMap" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		select count(id) from PRODUCT_RULE_REL
		<include refid="sql_of_where" />
	</select>

	<sql id="sql_of_where">
		WHERE 1=1
		<if test="bParam != null">
			<if test="bParam.id != null"> AND id = #{bParam.id,jdbcType=BIGINT} </if>
			<if test="bParam.s_id != null"> AND s_id = #{bParam.s_id,jdbcType=BIGINT} </if>
			<if test="bParam.p_id != null"> AND p_id = #{bParam.p_id,jdbcType=BIGINT} </if>
			<if test="bParam.r_id != null"> AND r_id = #{bParam.r_id,jdbcType=BIGINT} </if>
			<if test="bParam.relIds != null and bParam.relIds.size > 0">
				AND id in
				<foreach collection="bParam.relIds" item="item" open="("
					separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="bParam.rIds != null and bParam.rIds.size > 0">
				AND r_id in
				<foreach collection="bParam.rIds" item="item" open="("
					separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="bParam.pIds != null and bParam.pIds.size > 0">
				AND p_id in
				<foreach collection="bParam.pIds" item="item" open="("
					separator="," close=")">
					#{item}
				</foreach>
			</if>
		</if>
	</sql>
	<!-- 通用分页查询 -->
	<select id="queryByParamMap" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from PRODUCT_RULE_REL
		<include refid="sql_of_where" />
		<if test="pParam != null">
			<if test="pParam.orderByClause != null"> order by
				${pParam.orderByClause}
			</if>
			<if test="pParam.startIndex != null and pParam.pageSize != null">
				limit #{pParam.startIndex} , #{pParam.pageSize}
			</if>
		</if>
	</select>
	<!-- 批量插入 -->
	<insert id="insertBatch" parameterType="java.util.List">
			insert into PRODUCT_RULE_REL
			(
			<include refid="Base_Column_List" />
			)
			values
			<foreach collection="list" item="item" separator=",">
				(
				#{item.id,jdbcType=BIGINT},
				#{item.s_id,jdbcType=BIGINT},
				#{item.p_id,jdbcType=BIGINT},
				#{item.r_id,jdbcType=BIGINT}
				)
			</foreach>
	</insert>
	<!-- 批量更新 -->
	<update id="updateBatchByPrimaryKey" parameterType="java.util.List">
		<if test="list != null and list.size > 0 ">
			<foreach collection="list" item="item" index="index" open=""
				close="" separator=";">
				update PRODUCT_RULE_REL
				<set>
					<if test="item.s_id != null">
						s_id = #{item.s_id,jdbcType=BIGINT},
					</if>
					<if test="item.p_id != null">
						p_id = #{item.p_id,jdbcType=BIGINT},
					</if>
					<if test="item.bedSizes != null">
						r_id = #{item.r_id,jdbcType=BIGINT}
					</if>
				</set>
				where id = #{item.id,jdbcType=BIGINT}
			</foreach>
		</if>
	</update>
	<!-- 新加（根据id查询） -->
	<select id="findByIdList" resultMap="BaseResultMap"
		parameterType="map">
		select
		<include refid="Base_Column_List" />
		from PRODUCT_RULE_REL
		<where>
			<if test="idList != null and idList.size > 0 ">
				id in
				<foreach collection="idList" item="item" open="(" separator=","
					close=")">
					#{item}
				</foreach>
			</if>
		</where>
		order by id desc
	</select>
	<!-- 新加批量删除 -->
	<delete id="deleteBatchByPrimaryKey" parameterType="list">
			delete from PRODUCT_RULE_REL
			<where>
				id in
				<foreach collection="list" open="(" close=")" item="item"
					separator=",">
					#{item.id}
				</foreach>
			</where>
	</delete>
	<delete id="deleteByParams" parameterType="com.pzj.base.entity.product.ProductRuleRel">
		delete from PRODUCT_RULE_REL
		<include refid="delete_sql_of_where" />
	</delete>
	<sql id="delete_sql_of_where">
	<trim prefixOverrides="or" >
		<where>
			<if test="bParam != null">
				<if test="bParam.id != null"> id = #{bParam.id,jdbcType=BIGINT} </if>
				<if test="bParam.s_id != null"> or s_id = #{bParam.s_id,jdbcType=BIGINT} </if>
				<if test="bParam.p_id != null"> or p_id = #{bParam.p_id,jdbcType=BIGINT} </if>
				<if test="bParam.r_id != null"> or r_id = #{bParam.r_id,jdbcType=BIGINT} </if>
				<if test="bParam.relIds != null and bParam.relIds.size > 0">
					or id in
					<foreach collection="bParam.relIds" item="item" open="("
						separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test="bParam.rIds != null and bParam.rIds.size > 0">
					or r_id in
					<foreach collection="bParam.rIds" item="item" open="("
						separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test="bParam.pIds != null and bParam.pIds.size > 0">
					or p_id in
					<foreach collection="bParam.pIds" item="item" open="("
						separator="," close=")">
						#{item}
					</foreach>
				</if>
			</if>
			or 1=2
		</where>
		</trim>
	</sql>
</mapper>