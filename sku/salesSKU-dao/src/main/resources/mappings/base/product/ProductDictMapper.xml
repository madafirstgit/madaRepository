<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pzj.base.product.IProductDictMapper">

    <!-- 所有字段 -->
    <sql id="Base_Column_List">
	id  
	,label 
	,value 
	,type 
	,description 
	,sort 
	,create_date 
	,create_by 
	,update_by 
	,update_date 
	,remarks 
	,flag 
	,data_source 
	,supplier_id 
	</sql>

    <sql id="Alias_Column_List">
        dict.id
        ,dict.label
        ,dict.value
        ,dict.type
        ,dict.description
        ,dict.sort
        ,dict.create_date
        ,dict.create_by
        ,dict.update_by
        ,dict.update_date
        ,dict.remarks
        ,dict.flag
        ,dict.data_source
        ,dict.supplier_id
    </sql>

    <!-- 字段映射 -->
    <resultMap id="BaseResultMap" type="com.pzj.base.entity.product.ProductDict">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="label" jdbcType="VARCHAR" property="label"/>
        <result column="value" jdbcType="VARCHAR" property="value"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="flag" jdbcType="CHAR" property="flag"/>
        <result column="data_source" jdbcType="VARCHAR" property="dataSource"/>
        <result column="supplier_id" jdbcType="VARCHAR" property="supplierId"/>
    </resultMap>

    <resultMap id="AliasResultMap_RulesIntegral" type="com.pzj.base.entity.product.ProductRulesIntegral" extends="BaseResultMap">
        <collection property="productReleasesList" resultMap="com.pzj.base.product.IProductReleaseMapper.BaseResultMap" columnPrefix="releasee_"/>
    </resultMap>

    <!-- 主键查询 -->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from product_dict
        where id = #{id,jdbcType=BIGINT}
    </select>

    <!-- 删除 -->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from product_dict where id = #{id,jdbcType=BIGINT}
    </delete>

    <!-- 通用查询条件 -->
    <sql id="sql_of_where">
        WHERE 1=1
        <if test="bParam != null">
            <if test="bParam.id != null">AND id = #{bParam.id,jdbcType=BIGINT}</if>
            <if test="bParam.ids != null and bParam.ids.size > 0 ">
                and id in
                <foreach collection="bParam.ids" item="_id" open="(" separator="," close=")">
                    #{_id}
                </foreach>
            </if>
            <if test="bParam.label != null">AND label like #{bParam.label,jdbcType=VARCHAR}</if>
            <if test="bParam.value != null">AND value = #{bParam.value,jdbcType=VARCHAR}</if>
            <if test="bParam.type != null">AND type = #{bParam.type,jdbcType=VARCHAR}</if>
            <if test="bParam.description != null">AND description = #{bParam.description,jdbcType=VARCHAR}</if>
            <if test="bParam.sort != null">AND sort = #{bParam.sort,jdbcType=INTEGER}</if>
            <if test="bParam.createDate != null">AND create_date = #{bParam.createDate,jdbcType=TIMESTAMP}</if>
            <if test="bParam.createBy != null">AND create_by = #{bParam.createBy,jdbcType=VARCHAR}</if>
            <if test="bParam.updateBy != null">AND update_by = #{bParam.updateBy,jdbcType=VARCHAR}</if>
            <if test="bParam.updateDate != null">AND update_date = #{bParam.updateDate,jdbcType=TIMESTAMP}</if>
            <if test="bParam.remarks != null">AND remarks = #{bParam.remarks,jdbcType=VARCHAR}</if>
            <if test="bParam.flag != null">AND flag = #{bParam.flag,jdbcType=CHAR}</if>
            <if test="bParam.dataSource != null">AND data_source = #{bParam.dataSource,jdbcType=VARCHAR}</if>
            <if test="bParam.supplierId != null">AND supplier_id = #{bParam.supplierId,jdbcType=VARCHAR}</if>
        </if>
    </sql>


    <!-- 通用分页查询 -->
    <select id="queryByParamMap" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from product_dict
        <include refid="sql_of_where"/>
        <if test="pParam != null">
            <if test="pParam.orderByClause == null">order by id desc</if>
            <if test="pParam.orderByClause != null">order by ${pParam.orderByClause}</if>
            <if test="pParam.startIndex != null and pParam.pageSize != null">
                limit #{pParam.startIndex} , #{pParam.pageSize}
            </if>
        </if>
    </select>

    <!-- 通用分页查询记录总数 -->
    <select id="countByParamMap" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(id) from product_dict
        <include refid="sql_of_where"/>
    </select>

    <!-- 插入 -->
    <insert id="insert" parameterType="com.pzj.base.entity.product.ProductDict" useGeneratedKeys="true"
            keyProperty="id">
        insert into product_dict
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            <if test="label != null">
                label,
            </if>
            <if test="value != null">
                value,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <if test="flag != null">
                flag,
            </if>
            <if test="dataSource != null">
                data_source,
            </if>
            <if test="supplierId != null">
                supplier_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{id,jdbcType=BIGINT},
            <if test="label != null">
                #{label,jdbcType=VARCHAR},
            </if>
            <if test="value != null">
                #{value,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=CHAR},
            </if>
            <if test="dataSource != null">
                #{dataSource,jdbcType=VARCHAR},
            </if>
            <if test="supplierId != null">
                #{supplierId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <!-- 批量插入 请根据业务修改默认值-->
    <insert id="insertBatch" parameterType="java.util.List">
        insert into product_dict
        (id
        ,label
        ,value
        ,type
        ,description
        ,sort
        ,create_date
        ,create_by
        ,update_by
        ,update_date
        ,remarks
        ,flag
        ,data_source
        ,supplier_id
        )
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id,jdbcType=BIGINT}
            <choose>
                <when test="item.label != null">,#{item.label ,jdbcType=VARCHAR}</when>
                <otherwise>,''</otherwise>
            </choose>
            <choose>
                <when test="item.value != null">,#{item.value ,jdbcType=VARCHAR}</when>
                <otherwise>,''</otherwise>
            </choose>
            <choose>
                <when test="item.type != null">,#{item.type ,jdbcType=VARCHAR}</when>
                <otherwise>,''</otherwise>
            </choose>
            <choose>
                <when test="item.description != null">,#{item.description ,jdbcType=VARCHAR}</when>
                <otherwise>,''</otherwise>
            </choose>
            <choose>
                <when test="item.sort != null">,#{item.sort ,jdbcType=INTEGER}</when>
                <otherwise>,0</otherwise>
            </choose>
            <choose>
                <when test="item.createDate != null">,#{item.createDate ,jdbcType=TIMESTAMP}</when>
                <otherwise>,0</otherwise>
            </choose>
            <choose>
                <when test="item.createBy != null">,#{item.createBy ,jdbcType=VARCHAR}</when>
                <otherwise>,''</otherwise>
            </choose>
            <choose>
                <when test="item.updateBy != null">,#{item.updateBy ,jdbcType=VARCHAR}</when>
                <otherwise>,''</otherwise>
            </choose>
            <choose>
                <when test="item.updateDate != null">,#{item.updateDate ,jdbcType=TIMESTAMP}</when>
                <otherwise>,0</otherwise>
            </choose>
            <choose>
                <when test="item.remarks != null">,#{item.remarks ,jdbcType=VARCHAR}</when>
                <otherwise>,''</otherwise>
            </choose>
            <choose>
                <when test="item.flag != null">,#{item.flag ,jdbcType=CHAR}</when>
                <otherwise>,''</otherwise>
            </choose>
            <choose>
                <when test="item.dataSource != null">,#{item.dataSource ,jdbcType=VARCHAR}</when>
                <otherwise>,''</otherwise>
            </choose>
            <choose>
                <when test="item.supplierId != null">,#{item.supplierId ,jdbcType=VARCHAR}</when>
                <otherwise>,''</otherwise>
            </choose>
            )
        </foreach>
    </insert>

    <!-- 更新 -->
    <update id="updateByPrimaryKey" parameterType="com.pzj.base.entity.product.ProductDict">
        update product_dict
        <set>
            <if test="label != null">
                label = #{label,jdbcType=VARCHAR},
            </if>
            <if test="value != null">
                value = #{value,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                flag = #{flag,jdbcType=CHAR},
            </if>
            <if test="dataSource != null">
                data_source = #{dataSource,jdbcType=VARCHAR},
            </if>
            <if test="supplierId != null">
                supplier_id = #{supplierId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!-- 批量更新 -->
    <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update product_dict
            <set>
                <if test="item.label != null">
                    label = #{item.label,jdbcType=VARCHAR},
                </if>
                <if test="item.value != null">
                    value = #{item.value,jdbcType=VARCHAR},
                </if>
                <if test="item.type != null">
                    type = #{item.type,jdbcType=VARCHAR},
                </if>
                <if test="item.description != null">
                    description = #{item.description,jdbcType=VARCHAR},
                </if>
                <if test="item.sort != null">
                    sort = #{item.sort,jdbcType=INTEGER},
                </if>
                <if test="item.createDate != null">
                    create_date = #{item.createDate,jdbcType=TIMESTAMP},
                </if>
                <if test="item.createBy != null">
                    create_by = #{item.createBy,jdbcType=VARCHAR},
                </if>
                <if test="item.updateBy != null">
                    update_by = #{item.updateBy,jdbcType=VARCHAR},
                </if>
                <if test="item.updateDate != null">
                    update_date = #{item.updateDate,jdbcType=TIMESTAMP},
                </if>
                <if test="item.remarks != null">
                    remarks = #{item.remarks,jdbcType=VARCHAR},
                </if>
                <if test="item.flag != null">
                    flag = #{item.flag,jdbcType=CHAR},
                </if>
                <if test="item.dataSource != null">
                    data_source = #{item.dataSource,jdbcType=VARCHAR},
                </if>
                <if test="item.supplierId != null">
                    supplier_id = #{item.supplierId,jdbcType=VARCHAR},
                </if>
            </set>
            where id = #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>

    <!-- 根据ids查询 -->
    <select id="findByIdsMap" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from product_dict
        <where>
            id in (
            <foreach collection="objId" item="_objId" separator=",">
                #{_objId}
            </foreach>
            )
        </where>
    </select>

    <select id="queryMaxVal" parameterType="java.lang.String" resultType="java.lang.Long">
        select max(a.value) val from product_dict a
        <where>
            a.type = #{type}
        </where>
    </select>

    <!-- 通用查询条件 -->
    <sql id="Alias_Where">
        <where>
            <if test="dict != null">
                <if test="dict.id != null">AND dict.id = #{dict.id,jdbcType=BIGINT}</if>
                <if test="dict.ids != null and dict.ids.size > 0 ">
                    and id in
                    <foreach collection="dict.ids" item="_id" open="(" separator="," close=")">
                        #{_id}
                    </foreach>
                </if>
                <if test="dict.label != null">AND dict.label like #{dict.label,jdbcType=VARCHAR}</if>
                <if test="dict.value != null">AND dict.value = #{dict.value,jdbcType=VARCHAR}</if>
                <if test="dict.type != null">AND dict.type = #{dict.type,jdbcType=VARCHAR}</if>
                <if test="dict.description != null">AND dict.description = #{dict.description,jdbcType=VARCHAR}</if>
                <if test="dict.sort != null">AND dict.sort = #{dict.sort,jdbcType=INTEGER}</if>
                <if test="dict.createDate != null">AND dict.create_date = #{dict.createDate,jdbcType=TIMESTAMP}</if>
                <if test="dict.createBy != null">AND dict.create_by = #{dict.createBy,jdbcType=VARCHAR}</if>
                <if test="dict.updateBy != null">AND dict.update_by = #{dict.updateBy,jdbcType=VARCHAR}</if>
                <if test="dict.updateDate != null">AND dict.update_date = #{dict.updateDate,jdbcType=TIMESTAMP}</if>
                <if test="dict.remarks != null">AND dict.remarks = #{dict.remarks,jdbcType=VARCHAR}</if>
                <if test="dict.flag != null">AND dict.flag = #{dict.flag,jdbcType=CHAR}</if>
                <if test="dict.dataSource != null">AND dict.data_source = #{dict.dataSource,jdbcType=VARCHAR}</if>
                <if test="dict.supplierId != null">AND dict.supplier_id = #{dict.supplierId,jdbcType=VARCHAR}</if>
            </if>
        </where>
    </sql>

    <!--
    查询积分规则，同时查询出关联的产品。
    -->
    <select id="selectRulesIntegralAndProductByParams" resultMap="AliasResultMap_RulesIntegral">
        select
        <include refid="Alias_Column_List"/>,
        <include refid="com.pzj.base.product.IProductReleaseMapper.AliasProduct_Column_List"/>
        from product_dict dict
        inner join product_relation relation on dict.id = relation.obj_id and relation.obj_type = 'proDict' and
        dict.type = 'product:rules'
        left join product_release releasee on releasee.id = relation.rel_id and relation.rel_type = 'proRelease'
        <where>
            <trim prefixOverrides="where">
                <include refid="Alias_Where"/>
                <if test="releasee != null">
                    <if test="releasee.name != null"> AND releasee.name like #{releasee.name} </if>
                </if>
            </trim>
        </where>
        <if test="page != null">
            <if test="page.orderByClause == null">order by dict.id desc</if>
            <if test="page.orderByClause != null">order by ${page.orderByClause}</if>
            <if test="page.startIndex != null and page.pageSize != null">
                limit #{page.startIndex} , #{page.pageSize}
            </if>
        </if>
    </select>
    <select id="countRulesIntegralAndProductByParams" resultType="integer">
        select count(dict.id)
        from product_dict dict
        inner join product_relation relation on dict.id = relation.obj_id and relation.obj_type = 'proDict' and
        dict.type = 'product:rules'
        left join product_release releasee on releasee.id = relation.rel_id and relation.rel_type = 'proRelease'
        <where>
            <trim prefixOverrides="where">
                <include refid="Alias_Where"/>
                <if test="releasee != null">
                    <if test="releasee.name != null"> AND releasee.name like #{releasee.name} </if>
                </if>
            </trim>
        </where>
    </select>
    <select id="selectProductOfRulesIntegralByParams" resultMap="AliasResultMap_RulesIntegral">
        select
        relation.obj_id as id,
        <include refid="com.pzj.base.product.IProductReleaseMapper.AliasProduct_Column_List"/>
        from product_relation relation
        left join product_release releasee on releasee.id = relation.rel_id and relation.rel_type = 'proRelease' and relation.obj_type = 'proDict'
        <where>
            <if test="ruleIds != null">
                relation.obj_id in
                <foreach collection="ruleIds" item="ruleId" open="( " separator="," close=" )">
                  #{ruleId, jdbcType=BIGINT}
                </foreach>
            </if>
        </where>
    </select>
</mapper>